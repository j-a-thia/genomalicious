% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codonDT2genome.R
\name{codonDT2genome}
\alias{codonDT2genome}
\title{Align a codon data.table to genomic positions}
\usage{
codonDT2genome(codonDT, genomeAnnot, isCompressed)
}
\arguments{
\item{codonDT}{Data.table: The output from \code{dna2codonDT}. Note, this
must have been generated using the exon functionality. It could be the
compressed or uncompressed version (see \code{?dna2codonDT}).
The required columns are:
\enumerate{
   \item \code{$EXON}: Integer, the exon ID.
   \item \code{$CODON}: Integer, the codon ID.
   \item \code{$NUC.GENE}: Integer/Character, the nucleotide ID within the
   exon coding sequence. An integer class if an uncompressed codon table, but
   a character class if a compressed codon table (see \code{?dna2codonDT}).
}}

\item{genomeAnnot}{Data.table: The exon coding sequence annotations, e.g., from
a GFF3 annotations file. Each row should be an exon. The required columns are:
\enumerate{
   \item \code{$CHROM}: Character, the chromosome ID.
   \item \code{$START}: Integer, the starting position (on forward strand).
   \item \code{$END}: Integer, the end position (on forward strand).
   \item \code{$STRAND}: Character, the strand position, one of \code{'+'} (forward),
   or \code{'-'} (reverse). Note, that if the gene is on the reverse strand,
   the "end" of the exon (relative to the forward strand) is actually the
   "start" of the exon (relative to the reverse strand).
   \item \code{$EXON}: Integer, the exon ID.
}}

\item{isCompressed}{Logical: Is the codon data table provided in \code{codonDT}
compressed? See \code{dna2codonDT}.}
}
\value{
Returns the codon table but with the additional column \code{$CHROM}
and \code{$POS}, the chromosome and the genomic positions, respectively.
}
\description{
Takes a codon table produced from \code{dna2codonDT} and aligns genomic
positions against exons and codons, using a set of annotations. Note that 
this function is designed for a single gene on a single chromosome
or contig. To apply this function to multiple genes, you will need to use a loop.
}
