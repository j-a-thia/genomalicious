% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotDT2exonList.R
\name{annotDT2exonList}
\alias{annotDT2exonList}
\title{Convert a data.table of gene annotations to a list of exon sequences}
\usage{
annotDT2exonList(
  annotDT,
  genomeSeq,
  chromCol = "CHROM",
  startCol = "START",
  endCol = "END",
  strandCol = "STRAND"
)
}
\arguments{
\item{annotDT}{Data.table: Contains information on the exon positions.
Requires the following columns:
\enumerate{
   \item The chromosome ID (see param \code{chromCol}).
   \item The start position of the exon on the positive strand, that is,
   left to right on the genomic sequence (see param \code{startCol}).
   \item The end position of the exon on the positive strand, that is,
   left to right on the genomic sequence (see param \code{endCol}).
   \item The strand position of the exon, '+' for positive, and '-' for
   negative (see param \code{strandCol}).
}}

\item{genomeSeq}{DNAStringSet: The loaded genome sequence as a
\code{DNAStringSet} object, as per R's \code{Biostrings} package
(Pag√®s et al.). The sequence names must match the chromosome name in \code{annotDT}.}

\item{chromCol}{Character: The chromosome column name in \code{annotDT}.
Default is \code{'CHROM'}.}

\item{startCol}{Character: The exon start position in \code{annotDT}.
Default is \code{'START'}.}

\item{endCol}{Character: The exon end position in \code{annotDT}.
Default is \code{'END'}.}

\item{strandCol}{Character: The exon strand position in \code{annotDT}.
Default is \code{'STRAND'}.}
}
\value{
Returns a list, with each indexed item a character vector,
the exon extracted from the genome. Exons are ordered based on their order
of transcriptions, and are in the correct orientation.
}
\description{
A data.table with information on the start and end of exons is
used to generate a list containing each exon as an indexed item.
The indexes exon sequences are in the order and orientation that
they would be transcribed in. That is, they can be pasted together
and translated to form the protein sequence. Note that 
this function is designed for a single gene on a single chromosome
or contig. To apply this function to multiple genes, you will need to use a loop.
}
